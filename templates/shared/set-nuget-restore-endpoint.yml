parameters:
  nugetRestoreEndpoint: ""
  nugetRestorePat: ""
  nugetDistUrl: ""

steps:
- powershell: |
    function Render-Body { $input | foreach{@{value=$_}} | Format-Table -Property @{Expression={" "}},value -HideTableHeader -wrap}

    $nugetRestoreEndpoint = "${{parameters.nugetRestoreEndpoint}}"
    $nugetRestorePat = "${{parameters.nugetRestorePat}}"

    $configFilePath = $env:SYSTEM_DEFAULTWORKINGDIRECTORY + "/NuGet.Config"

    "Installing Nuget:`n"
    Invoke-WebRequest "${{parameters.nugetDistUrl}}" -outfile nuget.exe | Render-Body
    "    Nuget v4.7.1 installed.`n"

    # Use File.WriteAllLines since Nuget errors out if file has "UTF8 with BOM" encoding
    "Generating empty NuGet.Config:`n"
    [IO.File]::WriteAllLines($configFilePath, '<?xml version="1.0" encoding="utf-8"?><configuration><packageSources><clear /></packageSources></configuration>')
    "    Empty NuGet.Config generated.`n"

    $sourceName = 'nugetRestoreEndpoint'
    if($nugetRestorePat){
      "Adding source with PAT:"          
      .\nuget.exe sources add -Name $sourceName -Source $nugetRestoreEndpoint -Username 'placeholder' -Password $nugetRestorePat -configfile $configFilePath -StorePasswordInClearText | Render-Body
    }
    else { 
      "Adding source:"
      .\nuget.exe sources add -Name $sourceName -Source $nugetRestoreEndpoint -configfile $configFilePath | Render-Body
    }
  displayName: "Set Nuget restore endpoint"