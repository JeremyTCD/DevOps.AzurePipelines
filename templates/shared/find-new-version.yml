parameters:
  changelogPath: ""
  versionHeaderPattern: ""

# Outputs a job scoped variable named version if a new version is found
steps:
- powershell: |
    function Render-Body { $input | foreach{@{value=$_}} | Format-Table -Property @{Expression={" "}},value -HideTableHeader -wrap}

    # We've set triggers to commits to master and commits to branches with open pull requests 
    # to master. Only commits to master might have stuff to deploy.
    # TODO If we use $env:BUILD_REASON -eq 'PullRequest', do manual rebuilds cause deploys?
    if($env:BUILD_SOURCEBRANCHNAME -ne 'master'){
      "Pull request build, nothing to deploy"
      exit
    }
    "`nCommit is a merge commit into master...`n"

    # Find new version
    "Changelog versions:"
    $changelogVersions = get-content "${{parameters.changelogPath}}" | foreach{if($_ -match "${{parameters.versionHeaderPattern}}"){$matches[1]}}
    if(-not($?)){
      throw "Failed to read changelog."
    }
    $changelogVersions | Render-Body
    
    "Git tags:"
    $gitTags = git tag -l
    if($lastExitCode -ne 0){
      throw "Failed to retrieve existing Git tags."
    }
    $gitTags | Render-Body

    $newVersion = $changelogVersions | where{-not($gitTags -contains $_)}
    # If there is only 1 string, powershell assigns a string with non-zero length to $newVersion
    if($newVersion -is [array]){
      throw "Multiple new versions found, manual deployment required:`n$newVersion"
    }
    if($newVersion.length -eq 0){
      "No new version."
      exit
    }

    "New version `"$newVersion`" found...`n"
    write-host "##vso[task.setvariable variable=version]$newVersion"
  displayName: "Find new version"