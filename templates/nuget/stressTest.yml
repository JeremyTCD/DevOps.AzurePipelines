parameters:
  buildConfiguration: "Release"
  iterations: 100

jobs:
# Build
- job: "BuildAndTest"
  pool:
    vmImage: "vs2017-win2016"
  steps:
  - powershell: |
      function Render-Body { $input | foreach{@{value=$_}} | Format-Table -Property @{Expression={" "}},value -HideTableHeader -wrap}

      # Place cache in working directory so that it is uploaded to pipeline artifacts
      $env:NUGET_PACKAGES=$env:SYSTEM_DEFAULTWORKINGDIRECTORY + "/packages"

      "Restoring packages:"
      dotnet restore | Render-Body
      if($lastExitCode -ne 0){
        throw "Failed to restore dependencies."
      }

      "Building solution:"
      dotnet build --no-restore --configuration ${{parameters.buildConfiguration}} -p:CopyLocalLockFileAssemblies=true | Render-Body
      if($lastExitCode -ne 0){
        throw "Failed to build solution."
      }

      "Running tests (${{parameters.iterations}} iterations):"
      $testProjects = get-childitem test/**/*.csproj | foreach{$_.fullname}
      $iterations = [int]"${{parameters.iterations}}"
      for ($i=0; $i -le $iterations; $i++) {
        foreach($testProject in $testProjects){
          dotnet test $testProject --no-build --no-restore --configuration ${{parameters.buildConfiguration}} --logger trx --results-directory $env:AGENT_TEMPDIRECTORY | Render-Body
        }
        if($lastExitCode -ne 0){
          break;
        }
      }   
    displayName: "Build and test"
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: '**/*.trx'
    displayName: "Publish test results"