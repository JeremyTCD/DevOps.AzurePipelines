# Notes
# - Secret variables do not work for pull request builds, if we want to deploy from such builds, we need some other way to handle Git and Nuget personal access tokens

parameters:
  buildConfiguration: "Release"
  runInheritDoc: true
  runTests: true
  runCodeCoverage: true
  codecovKey: "$(codecovKey)"
  changelogPath: "CHANGELOG.md"
  versionHeaderPattern: '^##[ \t]*\[(\d+\.\d+\.\d+[0-9A-Za-z-.]*)\]'
  # TODO allow for multiple endpoints
  nugetRestoreEndpoint: "https://www.nuget.org/api/v2/package"
  nugetRestorePat: "$(nugetRestorePat)"
  nugetPushEndpoint: "https://www.nuget.org/api/v2/package"
  nugetPushPat: "$(nugetPushPat)"
  nugetDistUrl: "https://dist.nuget.org/win-x86-commandline/v4.7.1/nuget.exe"
  githubPat: "$(githubPat)"

jobs:
# Build
- job: "Build"
  pool:
    vmImage: "vs2017-win2016"
  steps:
  # TODO prebuild 
  # - install yarn
  - powershell: |
      function Render-Body { $input | foreach{@{value=$_}} | Format-Table -Property @{Expression={" "}},value -HideTableHeader -wrap}

      new-item .npmrc -type file
      add-content .npmrc "registry=https://pkgs.dev.azure.com/JeremyTCD/_packaging/Main/npm/registry/"
      add-content .npmrc "//pkgs.dev.azure.com/JeremyTCD/_packaging/Main/npm/registry/:_authToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Im9PdmN6NU1fN3AtSGpJS2xGWHo5M3VfVjBabyJ9.eyJuYW1laWQiOiJlNTBhY2EzZi0yNjQyLTYwZDQtYTg1OC05MDNjMzkzMjg1OGUiLCJzY3AiOiJ2c28uZHJvcF93cml0ZSB2c28ucGFja2FnaW5nX3dyaXRlIiwiYXVpIjoiNThmMjU4MDItNjcwOC00YWEyLThjOGMtOGY5ODMwMjM0MGJkIiwic2lkIjoiNDRkYmI3NDktOTUwMC00NjVkLThjNWEtZDRjOGNjODI4YTYwIiwiaXNzIjoiYXBwLnZzc3BzLnZpc3VhbHN0dWRpby5jb20iLCJhdWQiOiJhcHAudnNzcHMudmlzdWFsc3R1ZGlvLmNvbXx2c286NDU1NGU0NjAtNGEzZC00YjQ0LTgzZDItYTBhODgzNDUzODMwIiwibmJmIjoxNTQwOTgxNTk1LCJleHAiOjE1NDg3NTgxOTV9.NNLAZeFU1sZWPLeBdmZBz62oNyVwkJJ3r_PfdIbfSWkNKhdDgUxp_wCySpwaJleKHrAOdPkF3vO_nKLBVEoQUpThRHQmzoGIZm8Ex-FaMAJHSH4Kme3Izbsvd03q2ZMYoZ-DlXyDFlsrY5_-3e89K33V2mp_dwVrmKdj4cS-dMfsVT9YctM8zZeLNMTeOG1-a33Jw7N7mrsy42rbkl9b4b94fX7bNj1l8PKd9DyDOUqY4MSwoJSTD1dz5wyJyverI9-1Z3FK9t5hYM7l97axkM7BPqf9R4IpwxMLBE43_qeT3T_QrTDhKHFhEyrHSpolsWEnZJyPCtO9VpAmNyN1qw"
      add-content .npmrc "always-auth=true"

      "Restoring dependencies:"
      npm install | Render-Body

      "Building project:"
      npm run build

      # Unhide .git folder and rename it so that PublishPipelineArtifact picks it up
      attrib -h .git
      rename-item .git git
    displayName: "Build"
    env:
      NUGET_DIST_URL: ${{parameters.nugetDistUrl}}
      NUGET_RESTORE_ENDPOINT: ${{parameters.nugetRestoreEndpoint}}
      NUGET_RESTORE_PAT: ${{parameters.nugetRestorePat}}
      RUN_INHERIT_DOC: ${{parameters.runInheritDoc}}
  # Publish entire working directory to artifacts - https://docs.microsoft.com/en-us/azure/devops/pipelines/process/phases?view=vsts&tabs=yaml#artifact-download
  - task: "PublishPipelineArtifact@0"
    displayName: "Publish Working Directory"
    inputs:
      artifactName: "WorkingDirectory"
      targetPath: "$(System.DefaultWorkingDirectory)"
# TODO Test
# Deploy
- job: "Deploy"
  dependsOn:
  - "Build"
  steps:
  - checkout: "none"
  - template: "download-working-directory.yml"
  - template: "changelog-versioning.yml"
    parameters:
      changelogPath: ${{parameters.changelogPath}}
      versionHeaderPattern: ${{parameters.versionHeaderPattern}}
  - powershell: |
      function Render-Body { $input | foreach{@{value=$_}} | Format-Table -Property @{Expression={" "}},value -HideTableHeader -wrap}

      # TODO
      # - publish to npm
      npm publish
    displayName: "Deploy"
    # TODO When template parameters can be used in scripts, remove this - https://github.com/Microsoft/azure-pipelines-agent/issues/1772
    env:
      BUILD_CONFIGURATION: ${{parameters.buildConfiguration}}
      NUGET_ENDPOINT: ${{parameters.nugetPushEndpoint}}
      NUGET_PUSH_PAT: ${{parameters.nugetPushPat}}
  - template: "tag-commit.yml"
    parameters:
      githubPat: ${{parameters.githubPat}}
      version: $(version)