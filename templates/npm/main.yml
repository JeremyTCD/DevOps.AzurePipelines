# Notes
# - Secret variables do not work for pull request builds, if we want to deploy from such builds, we need some other way to handle Git and Nuget personal access tokens

parameters:
  changelogPath: "CHANGELOG.md"
  versionHeaderPattern: '^##[ \t]*\[(\d+\.\d+\.\d+[0-9A-Za-z-.]*)\]'
  installRegistryEndpoint: "https://www.npm.org/api/v2/package"
  installRegistryPat: "$(installRegistryPat)"
  publishRegistryEndpoint: "https://www.npm.org/api/v2/package"
  publishRegistryPat: "$(publishRegistryPat)"
  githubPat: "$(githubPat)"

jobs:
# Build
- job: "Build"
  pool:
    vmImage: "vs2017-win2016"
  steps:
  - template: set-registry.yml
    parameters:
      endpoint: ${{parameters.installRegistryEndpoint}}
      pat: ${{parameters.installRegistryPat}}
  - powershell: |
      function Render-Body { $input | foreach{@{value=$_}} | Format-Table -Property @{Expression={" "}},value -HideTableHeader -wrap}

      "Restoring dependencies:"
      npm install | Render-Body

      "Building project:"
      npm run build | Render-Body

      # Unhide .git folder and rename it so that PublishPipelineArtifact picks it up
      attrib -h .git
      rename-item .git git
    displayName: "Build"
    env:
      NPM_INSTALL_ENDPOINT: ${{parameters.installRegistryEndpoint}}
      NPM_INSTALL_PAT: ${{parameters.installRegistryPat}}
  - template: "../shared/publish-working-directory.yml"
# TODO Test
# Deploy
- job: "Deploy"
  dependsOn:
  - "Build"
  steps:
  - checkout: "none"
  - template: "../shared/download-working-directory.yml"
  - template: "../shared/changelog-versioning.yml"
    parameters:
      changelogPath: ${{parameters.changelogPath}}
      versionHeaderPattern: ${{parameters.versionHeaderPattern}}
  - template: set-registry.yml
    parameters:
      endpoint: ${{parameters.publishRegistryEndpoint}}
      pat: ${{parameters.publishRegistryPat}}
  - powershell: |
      function Render-Body { $input | foreach{@{value=$_}} | Format-Table -Property @{Expression={" "}},value -HideTableHeader -wrap}

      "Publishing package:"
      npm publish --tag $env:VERSION | Render-Body
    displayName: "Publish"
    condition: ne(variables['version'], '')
    env:
      NPM_PUBLISH_ENDPOINT: ${{parameters.publishRegistryEndpoint}}
      NPM_PUBLISH_PAT: ${{parameters.publishRegistryPat}}
  - template: "../shared/tag-commit.yml"
    parameters:
      githubPat: ${{parameters.githubPat}}