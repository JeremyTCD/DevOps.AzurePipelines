# Notes
# - Secret variables do not work for pull request builds, if we want to deploy from such builds, we need some other way to handle Git and Nuget personal access tokens

parameters:
  changelogPath: "CHANGELOG.md"
  versionHeaderPattern: '^##[ \t]*\[(\d+\.\d+\.\d+[0-9A-Za-z-.]*)\]'
  npmInstallEndpoint: "https://www.npm.org/api/v2/package"
  npmInstallPat: "$(npmInstallPat)"
  npmPublishEndpoint: "https://www.npm.org/api/v2/package"
  npmPublishPat: "$(npmPublishPat)"
  githubPat: "$(githubPat)"

jobs:
# Build
- job: "Build"
  pool:
    vmImage: "vs2017-win2016"
  steps:
  - template: set-registry.yml
    parameters:
      endpoint: ${{parameters.npmInstallEndpoint}}
      pat: ${{parameters.npmInstallPat}}
  - powershell: |
      function Render-Body { $input | foreach{@{value=$_}} | Format-Table -Property @{Expression={" "}},value -HideTableHeader -wrap}

      "Restoring dependencies:"
      npm install | Render-Body

      "Building project:"
      npm run build | Render-Body
    displayName: "Build"
  - template: "../shared/publish-working-directory.yml"
# TODO Test
# Deploy
- job: "Deploy"
  dependsOn:
  - "Build"
  steps:
  - checkout: "none"
  - template: "../shared/download-working-directory.yml"
  - template: "../shared/changelog-versioning.yml"
    parameters:
      changelogPath: ${{parameters.changelogPath}}
      versionHeaderPattern: ${{parameters.versionHeaderPattern}}
  - template: set-registry.yml
    parameters:
      endpoint: ${{parameters.npmPublishEndpoint}}
      pat: ${{parameters.npmPublishPat}}
  - powershell: |
      function Render-Body { $input | foreach{@{value=$_}} | Format-Table -Property @{Expression={" "}},value -HideTableHeader -wrap}

      "Setting package version:"
      npm version $env:VERSION | Render-Body

      "Publishing package:"
      $message = npm publish
      $message | Render-Body

      # TODO this is brittle. Error messages may change in future npm releases, consider "npm view <package name>@<version>" to check
      # whether the version already exists.
      if(($lastExitCode -ne 0) -and -not($message -contains 'Failed PUT 403')) {
        throw "An unexpected error occurred while attempting to publish package If it was an intermittent issue, do a manual rebuild of the same commit ($env:BUILD_SOURCEVERSION). Otherwise, rectify the issue and merge the changes into master to trigger a CI build."
      }
    displayName: "Publish"
    condition: ne(variables['version'], '')
  - template: "../shared/tag-commit.yml"
    parameters:
      githubPat: ${{parameters.githubPat}}